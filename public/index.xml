<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hyerim blog</title>
    <link>https://hye-rim.github.io/</link>
    <description>Recent content on hyerim blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Tue, 06 Mar 2018 17:10:20 +0900</lastBuildDate>
    
	<atom:link href="https://hye-rim.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Gradle Build Variants] 다양한 버전의 앱 생성하기 - productFlavors</title>
      <link>https://hye-rim.github.io/devlog/android-buildvariants-2/</link>
      <pubDate>Tue, 06 Mar 2018 17:10:20 +0900</pubDate>
      
      <guid>https://hye-rim.github.io/devlog/android-buildvariants-2/</guid>
      <description>이전 글에서는 build type을 달리 하는 법을 알아봤다면, 이번에는 여러 버전의 앱을 만들기 위해 gradle의 productFlavors 속성을 활용하는 법을 알아보겠습니다.
이 글에서 설정할 버전은 다음과 같습니다. - 기존 버전의 full version 앱 - 앱의 크기가 커져서 가벼운 버전을 선호하는 사용자를 위한 lite version 앱 - 관리자를 위한 admin version 앱
 만약 buildType 속성을 활용해 debug, alpha, beta, release 등 build type을 달리 설정하는 방법이 궁금하시다면 아래의 이전 글을 참고해주세요.</description>
    </item>
    
    <item>
      <title>[Gradle Build Variants] 다양한 버전의 앱 생성하기 - buildType</title>
      <link>https://hye-rim.github.io/devlog/android-buildvariants-1/</link>
      <pubDate>Fri, 02 Mar 2018 17:10:20 +0900</pubDate>
      
      <guid>https://hye-rim.github.io/devlog/android-buildvariants-1/</guid>
      <description>앱을 개발하다 보면 한가지 버전의 앱만으로는 아쉬울 때가 종종 있습니다. 예를 들어 - 광고의 여부에 따라 free/paid version 앱 - 앱의 크기가 커져서 가벼운 버전을 선호하는 사용자를 위한 lite version 앱 - 관리자를 위한 admin version 앱
그냥 별 고민하지 않고 만든다면 아마 프로젝트를 복사하여 여러 개의 프로젝트를 생성할 것입니다. 이렇게 되면 수정/추가해야 할 사항이 있다면 모든 프로젝트를 수정해야 하고, 같은 부분임에도 코드가 다른 경우가 발생할 것입니다.
또한, 개발 서버와 릴리즈 서버가 구분되어 있을 경우 상황에 따라 서버 부분 코드를 계속 바꿔줘야 합니다.</description>
    </item>
    
    <item>
      <title>001.Swift란?</title>
      <link>https://hye-rim.github.io/devlog/swift-01_swift/</link>
      <pubDate>Wed, 20 Dec 2017 17:10:20 +0900</pubDate>
      
      <guid>https://hye-rim.github.io/devlog/swift-01_swift/</guid>
      <description>Swift란? Swift는 안전, 성능 및 소프트웨어 디자인 패턴에 대한 현대적인 접근 방식을 사용하여 만들어진 범용 프로그래밍 언어다. 또한 오픈 소스이다.
 애플의 iOS와 OS X를 위한 프로그래밍 언어
 기존의 애플 운영체제용 언어인 Objective-C와 함께 공존할 목적으로 만들어졌으며 Objective-C와 마찬가지로 LLVM으로 빌드되고 같은 런타임을 공유한다.
Swift는 개발자가 더 쉽게 작성하고 올바른 프로그램을 개발할 수 있도록 고안되었다. 그래서 입문자에게 보다 친숙하며, Scripting language 만큼 표현하기 쉬운 산업 품질 프로그래밍 언어이다. industrial-quality programming language 해석한게 맞는지 모르겠다 :(</description>
    </item>
    
    <item>
      <title>String, new String</title>
      <link>https://hye-rim.github.io/devlog/java-string_newstring/</link>
      <pubDate>Tue, 19 Dec 2017 17:10:20 +0900</pubDate>
      
      <guid>https://hye-rim.github.io/devlog/java-string_newstring/</guid>
      <description>String, new String - String 생성방식의 차이
String a = new String(&amp;quot;hello&amp;quot;); String b = new String(&amp;quot;hello&amp;quot;); String c = &amp;quot;hello&amp;quot;; String d = &amp;quot;hello&amp;quot;; System.out.println(a==b); //case 1 System.out.println(c==d); //case 2  위 코드의 결과값은 어떻게 될까? equals 메소드였다면 둘 다 true이다. 하지만 == 연산이므로 case 1은 false이고, case 2는 true이다.
String a = new String(&amp;quot;hello&amp;quot;); String b = new String(&amp;quot;hello&amp;quot;);  a와 b는 heap 내에 일반적인 객체를 생성하게 되므로 각기 다른 객체를 만들어 참조한다.</description>
    </item>
    
    <item>
      <title>안드로이드 라이브러리 사용하기 - 001.Butter Knife</title>
      <link>https://hye-rim.github.io/devlog/android-library-butterknife/</link>
      <pubDate>Wed, 19 Jul 2017 17:10:20 +0900</pubDate>
      
      <guid>https://hye-rim.github.io/devlog/android-library-butterknife/</guid>
      <description>ButterKnife를 사용해보자
버터가 먹고싶어지는 로고다
ButterKnife는 필드나 메소드가 안드로이드 뷰에 접근할 때 어노테이션(@)을 사용하여 더욱 편하게 접근하여 개발할 수 있도록 도와주는 라이브러리다.
먼저, Butter Knife를 사용하기 위해서는 build.gradle에 두줄만 추가하면 된다.
GRADLE compile &#39;com.jakewharton:butterknife:8.7.0&#39; annotationProcessor &#39;com.jakewharton:butterknife-compiler:8.7.0&#39;  최신 버전을 기록했지만 업데이트 될 수 있으니 꼭 공식 페이지에서 버전을 확인 하는 것이 좋다.
 http://jakewharton.github.io/butterknife/  페이지 하단에 있다. 위에 있을 것 같아 한참 찾았다
안드로이드 개발을 할 때 많이 사용하는 findViewById를 살펴보자.</description>
    </item>
    
  </channel>
</rss>