<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on hyerim blog</title>
    <link>https://hye-rim.github.io/tags/java/</link>
    <description>Recent content in Java on hyerim blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 19 Dec 2017 17:10:20 +0900</lastBuildDate>
    
	<atom:link href="https://hye-rim.github.io/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>String, new String</title>
      <link>https://hye-rim.github.io/devlog/java-string_newstring/</link>
      <pubDate>Tue, 19 Dec 2017 17:10:20 +0900</pubDate>
      
      <guid>https://hye-rim.github.io/devlog/java-string_newstring/</guid>
      <description>String, new String - String 생성방식의 차이
String a = new String(&amp;quot;hello&amp;quot;); String b = new String(&amp;quot;hello&amp;quot;); String c = &amp;quot;hello&amp;quot;; String d = &amp;quot;hello&amp;quot;; System.out.println(a==b); //case 1 System.out.println(c==d); //case 2  위 코드의 결과값은 어떻게 될까? equals 메소드였다면 둘 다 true이다. 하지만 == 연산이므로 case 1은 false이고, case 2는 true이다.
String a = new String(&amp;quot;hello&amp;quot;); String b = new String(&amp;quot;hello&amp;quot;);  a와 b는 heap 내에 일반적인 객체를 생성하게 되므로 각기 다른 객체를 만들어 참조한다.</description>
    </item>
    
  </channel>
</rss>